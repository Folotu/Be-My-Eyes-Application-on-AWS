version: 0.2

env:
  variables:
    BUILD_USERMANAGEMENT: "true"
    BUILD_TRANSCRIPTION: "true"
    BUILD_DOCUMANAGEMENT: "true"
    BUILD_FRONTEND: "true"
    
phases:
  install:
    commands:
      - echo "Building all services."

  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - echo "$(aws ecr get-login-password --region $AWS_DEFAULT_REGION)" | docker login --username AWS --password-stdin $REPOSITORY_URI
      - echo "Substituting placeholder with Account ID..."
      # - ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
      # - sed -i "s|AWS_ACCOUNT_ID|$ACCOUNT_ID|g" usermanagement/appspec.yml
      # - sed -i "s|AWS_ACCOUNT_ID|$ACCOUNT_ID|g" transcription/appspec.yml
      # - sed -i "s|AWS_ACCOUNT_ID|$ACCOUNT_ID|g" documentmanagement/appspec.yml
      # - sed -i "s|AWS_ACCOUNT_ID|$ACCOUNT_ID|g" frontend/appspec.yml
      

  build:
    commands:
      # Build and push UserManagement service
      - |
        cd usermanagement 
        echo Building UserManagement service...
        docker build -t usermanagement .
        docker tag usermanagement:latest $REPOSITORY_URI/usermanagement-containerrepo:latest
        docker push $REPOSITORY_URI/usermanagement-containerrepo:latest
        cd ..
      # Build and push description service
      - |
        cd description 
        echo Building description service...
        docker build -t description .
        docker tag description:latest $REPOSITORY_URI/descriptioncontainerrepo:latest
        docker push $REPOSITORY_URI/descriptioncontainerrepo:latest
        cd ..
      # # Build and push DocumentManagement service
      # - |
      #   cd documentmanagement 
      #   echo Building DocumentManagement service...
      #   docker build -t documentmanagement .
      #   docker tag documentmanagement:latest $REPOSITORY_URI/documentmanagementappcontainerrepo:latest
      #   docker push $REPOSITORY_URI/documentmanagementappcontainerrepo:latest
      #   cd ..
      # # Build and push Frontend service
      # - |
      #   cd frontend 
      #   echo Building Frontend service...
      #   docker build -t frontend .
      #   docker tag frontend:latest $REPOSITORY_URI/frontendappcontainerrepo:latest
      #   docker push $REPOSITORY_URI/frontendappcontainerrepo:latest
      #   cd ..

# artifacts:
#   secondary-artifacts:
#     UserManagementBuildOutput:
#       files:
#         - usermanagement/Dockerfile
#         - usermanagement/appspec.yml
#       discard-paths: yes
#     TranscriptionBuildOutput:
#       files:
#         - transcription/Dockerfile
#         - transcription/appspec.yml
#       discard-paths: yes
#     DocumentManagementBuildOutput:
#       files:
#         - documentmanagement/Dockerfile
#         - documentmanagement/appspec.yml
#       discard-paths: yes
#     FrontendBuildOutput:
#       files:
#         - frontend/Dockerfile
#         - frontend/appspec.yml
#       discard-paths: yes